$Logfile = "C:\Leverate\ScriptLogs\WorkflowsMonitoring.log"
Function LogWrite
{
   Param ([string]$logstring)
   $date = Get-Date
   $message = [string]$date + " - " + $logstring
   Add-content $Logfile -value $message
}

$dataSource = "TPCRMV9-DB3"
$database = "MSCRM_CONFIG"
$connectionString = "Server=$dataSource;Database=$database;Integrated Security=True;"
$DBs_query = "SELECT [DatabaseName] FROM MSCRM_CONFIG.dbo.Organization WHERE State = 1"
$DBs = Invoke-Sqlcmd -Query $DBs_query -ServerInstance $dataSource

$QUERY2 = "SELECT COUNT(*)
FROM AsyncOperationBase WITH (NOLOCK)
WHERE StatusCode IN (0)"
#State       Status                  NumericStatusValue
#Ready       WaitingForResources     0
#Suspended   Waiting                 10
#Locked      InProgress              20
#Locked      Pausing                 21
#Locked      Canceling               22
#Completed   Succeeded               30
#Completed   Failed                  31
#Completed   Canceled                32

$total = 0
$message = ""
$time = Get-Date
Write-Host "The time is $time"
New-EventLog -LogName CRMMonitoring -Source "CRM Workflows" -ErrorAction Ignore

foreach ($DB in $DBs) {
    $DB_fields_query1 = "USE " + $DB.DatabaseName + " " + $QUERY2
    
    $result = Invoke-Sqlcmd -Query $DB_fields_query1 -ServerInstance $dataSource -ErrorAction SilentlyContinue -Username "scriptsUser" -Password "JS83nos9jlsd22"
    $count_per_org = $result.Column1
    
    if ($count_per_org -gt 1) {
        $message = $message + $DB.DatabaseName + " - " + $count_per_org + "`n"
        $total = $total + $count_per_org
    }

    if ($count_per_org -gt 10) {
        Write-Host $DB.DatabaseName - $count_per_org
    }
}

if ($total -gt 1000) {
    $message = "Total - " + $total + " workflows waiting for resources in all organizations" + "`n" + $message
    LogWrite -logstring $message 
    Write-EventLog -LogName CRMMonitoring -Source "CRM Workflows" -EntryType Error -EventID 1 -Message $message
} else {
    $message = "Everything is good. Total - " + $total + " workflows waiting for resources in all organizations" + "`n" + $message
    LogWrite -logstring $message 
}

Write-Host "Total - " $total
